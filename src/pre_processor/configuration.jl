module ModelConfiguration

export name, timestep, timespan, create_model_configuration

using CSV, YAML, Main.SystemStructMess, Main.Exceptions
using Main.Dirs: path

"""
    get_model_config_dict(dict::Dict)

Given a dictionary generated by reading the file model_specs.yaml, it generates a
dictionary with the model configuration.
"""

function get_model_config_dict(dict::Dict)
    model = Dict()
    for i in keys(dict)

        if i == "model"
            model = dict[i]
        else
            throw(WrongInputLevel("One of the level of the model_config file is not model "))
        end
    end
    return model
end


"""
    get_struct_model_config(dict::Dict)

Given a dictionary with the model configuration, it return the respective struct Model_configuration.
If a value is not defined it will have the default `missing` attribute.
"""

function get_struct_model_config(dict::Dict)
    model = Model_configuration()

    for i in keys(dict)
        if Symbol(i) in fieldnames(typeof(model))
            setproperty!(model,Symbol(i),dict[i])
        else
            throw(NoField("Field",i,"is not a possible entry for model_config file."))
        end
    end

    return model
end

"""
    create_model_configuration()

By calling the functions get_model_config_dict() and get_struct_model_config() it generates
the model configuriation struct.
"""

function create_model_configuration()
    preliminary_configuration = YAML.load(open(joinpath(path, "..", "data", "data_mess", "model_specs.yaml")))
    dict_model_config = get_model_config_dict(preliminary_configuration)
    model = get_struct_model_config(dict_model_config)
    return model
end

model_config = create_model_configuration()
name = model_config.name

timestep = model_config.timestep
timespan = model_config.timespan


end
